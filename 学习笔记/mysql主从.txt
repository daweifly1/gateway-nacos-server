Centos7下MySQL5.7.22安装
su root

1.系统约定
安装文件下载目录：/data/software
Mysql目录安装位置：/usr/local/mysql(mv创建)
数据库保存位置：/data/mysql
日志保存位置：/data/log/mysql

2.安装文件下载目录
mkdir -p /data/software/

3.解压压缩包到目标位置
cd /data/software/
rz
tar -zxvf mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz
mv /data/software/mysql-5.7.22-linux-glibc2.12-x86_64 /usr/local/mysql

4.创建数据仓库目录
mkdir -p /data/mysql

5.新建mysql用户、组及目录
groupadd mysql
useradd -r -s /sbin/nologin -g mysql mysql -d /usr/local/mysql

6.改变目录属有者
cd /usr/local/mysql
chown -R mysql .
chgrp -R mysql .

chown -R mysql /data/mysql

7.配置参数
/usr/local/mysql/bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql

Generating a new UUID: 1b4b4912-6672-11e9-b5d1-08002727a5f4.
password is generated for root@localhost: :QtIedzr&3Wo

Generating a new UUID: 4f8cb6d9-6672-11e9-9939-080027d95e38.
password is generated for root@localhost: ltTFyegtg4(b


/usr/local/mysql/bin/mysql_ssl_rsa_setup  --datadir=/data/mysql

8.修改系统配置文件
cd /usr/local/mysql/support-files
cp mysql.server /etc/init.d/mysql
vi /etc/init.d/mysql
basedir=/usr/local/mysql
datadir=/data/mysql
注：mysql5.7.21不需要my.cnf文件

9.启动mysql
/etc/init.d/mysql start
注意：这个地方可能会启动报错，原因是centos7的/etc/目录下默认存在my.cnf文件，而mysql默认会根据这个配置文件启动，先将其删除即可
cd /etc/
mv  /etc/my.cnf  /etc/my_back.cnf
再次启动
/etc/init.d/mysql start

10.登陆
mysql -h localhost -u root -p
    --如果出现：-bash: mysql: command not found
    --就执行： # ln -s /usr/local/mysql/bin/mysql /usr/bin --没有出现就不用执行
--输入第6步生成的临时密码

11.修改密码
mysql> set password=password('123456');

12.设置root账户的host地址（修改了才可以远程连接）
mysql>grant all privileges on *.* to 'root'@'%' identified by '123456';
mysql>flush privileges;
--查看表
mysql> use mysql;
mysql> select host,user from user;

13.防火墙放行3306端口
firewall-cmd --zone=public --query-port=3306/tcp
firewall-cmd --zone=public --add-port=3306/tcp --permanent
firewall-cmd --reload


14.添加系统路径
echo 'export PATH=/usr/local/mysql/bin:$PATH'>>/etc/profile
source /etc/profile

15.配置mysql自动启动
chmod 755 /etc/init.d/mysql
chkconfig --add mysql
chkconfig --level 345 mysql on

16.关闭mysql
/etc/init.d/mysql stop

17.查询最大连接数
mysqladmin -uroot -p variables |grep max_connections

18.优化
重写/etc/my.cnf 文件，重启mysql

================================================================================

上接Centos7 下关于MySQL5.7.22的安装

su root

1.分别停止MySQL服务
/etc/init.d/mysql stop

2.修改master的my.cnf文件

master：

[mysqld]
log-bin=mysql-bin
server-id=1
binlog-do-db=cmdb
binlog_format=MIXED
slave_skip_errors=1062





3.启动master服务
/etc/init.d/mysql start

 

4.登录MySQL
mysql -h localhost -u root -p


5.创建用户用于从库同步数据
mysql> GRANT REPLICATION SLAVE ON *.* TO 'backup'@'%'IDENTIFIED BY '123456';

6.创建需要同步的数据库

create database cmdb default character set utf8 collate utf8_general_ci;


7.获取二进制日志信息
mysql > SHOW MASTER STATUS \G

8.修改slave的my.cnf文件

[mysqld]
log-bin=mysql-bin
server-id=2


 

9.启动slave服务
/etc/init.d/mysql start

 

10.给从库设置主库
mysql -h localhost -u root -p
mysql> CHANGE MASTER TO MASTER_HOST='192.168.99.100',MASTER_USER='backup',MASTER_PASSWORD='123456',MASTER_LOG_FILE='mysql-bin.000017',MASTER_LOG_POS=154;
 

10.启动同步进程
start slave;

11.查看同步状态
show slave status \G





























mycat 读写分离
schema.xml

<?xml version="1.0"?>
<!DOCTYPE mycat:schema SYSTEM "schema.dtd">
<mycat:schema xmlns:mycat="http://io.mycat/">

	<schema name="TESTDB" checkSQLschema="false" sqlMaxLimit="100" dataNode="dn1">
	</schema>
	<dataNode name="dn1" dataHost="localhost1" database="cmdb" />
	
	 <dataHost name="localhost1" maxCon="1000" minCon="10" balance="3" writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
        <heartbeat>select user()</heartbeat>
        <!-- 可以配置多个主从 -->
        <writeHost host="hostM1" url="192.168.99.100:3306" user="root" password="123456">
            <!-- 可以配置多个从库 -->
            <readHost host="hostS2" url="192.168.99.101:3306" user="root" password="123456" />
        </writeHost>
    </dataHost>
</mycat:schema>

server.xml

<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mycat:server SYSTEM "server.dtd">
<mycat:server xmlns:mycat="http://io.mycat/">
	<system>
	<property name="nonePasswordLogin">0</property> <!-- 0为需要密码登陆、1为不需要密码登陆 ,默认为0，设置为1则需要指定默认账户-->
	<property name="useHandshakeV10">1</property>
	<property name="useSqlStat">0</property>  <!-- 1为开启实时统计、0为关闭 -->
	<property name="useGlobleTableCheck">0</property>  <!-- 1为开启全加班一致性检测、0为关闭 -->
	<property name="sequnceHandlerType">2</property>
	<property name="subqueryRelationshipCheck">false</property> <!-- 子查询中存在关联查询的情况下,检查关联字段中是否有分片字段 .默认 false -->
      <!--  <property name="useCompression">1</property>--> <!--1为开启mysql压缩协议-->
        <!--  <property name="fakeMySQLVersion">5.6.20</property>--> <!--设置模拟的MySQL版本号-->
	<!-- <property name="processorBufferChunk">40960</property> -->
	<!-- 
	<property name="processors">1</property> 
	<property name="processorExecutor">32</property> 
	 -->
        <!--默认为type 0: DirectByteBufferPool | type 1 ByteBufferArena | type 2 NettyBufferPool -->
		<property name="processorBufferPoolType">0</property>
		<!--默认是65535 64K 用于sql解析时最大文本长度 -->
		<!--<property name="maxStringLiteralLength">65535</property>-->
		<!--<property name="sequnceHandlerType">0</property>-->
		<!--<property name="backSocketNoDelay">1</property>-->
		<!--<property name="frontSocketNoDelay">1</property>-->
		<!--<property name="processorExecutor">16</property>-->
		<!--
			<property name="serverPort">8066</property> <property name="managerPort">9066</property> 
			<property name="idleTimeout">300000</property> <property name="bindIp">0.0.0.0</property> 
			<property name="frontWriteQueueSize">4096</property> <property name="processors">32</property> -->
		<!--分布式事务开关，0为不过滤分布式事务，1为过滤分布式事务（如果分布式事务内只涉及全局表，则不过滤），2为不过滤分布式事务,但是记录分布式事务日志-->
		<property name="handleDistributedTransactions">0</property>
		
		<!--off heap for merge/order/group/limit      1开启   0关闭-->
		<property name="useOffHeapForMerge">0</property>
		<!--单位为m-->
        <property name="memoryPageSize">64k</property>
		<!--单位为k-->
		<property name="spillsFileBufferSize">1k</property>
		<property name="useStreamOutput">0</property>
		<!--单位为m-->
		<property name="systemReserveMemorySize">384m</property>
		<!--是否采用zookeeper协调切换  -->
		<property name="useZKSwitch">false</property>

		<!-- XA Recovery Log日志路径 -->
		<!--<property name="XARecoveryLogBaseDir">./</property>-->

		<!-- XA Recovery Log日志名称 -->
		<!--<property name="XARecoveryLogBaseName">tmlog</property>-->
		<!--如果为 true的话 严格遵守隔离级别,不会在仅仅只有select语句的时候在事务中切换连接-->
		<property name="strictTxIsolation">false</property>
		<property name="useZKSwitch">true</property>
	</system>
	
	<!-- 全局SQL防火墙设置 -->
	<!--白名单可以使用通配符%或着*-->
	<!--例如<host host="127.0.0.*" user="root"/>-->
	<!--例如<host host="127.0.*" user="root"/>-->
	<!--例如<host host="127.*" user="root"/>-->
	<!--例如<host host="1*7.*" user="root"/>-->
	<!--这些配置情况下对于127.0.0.1都能以root账户登录-->
	<!--
	<firewall>
	   <whitehost>
	      <host host="1*7.0.0.*" user="root"/>
	   </whitehost>
       <blacklist check="false">
       </blacklist>
	</firewall>
	-->
	<user name="root" defaultAccount="true">
		<property name="password">123456</property>
		<property name="schemas">TESTDB</property>
		
		<!-- 表级 DML 权限设置 -->
		<!-- 		
		<privileges check="false">
			<schema name="TESTDB" dml="0110" >
				<table name="tb01" dml="0000"></table>
				<table name="tb02" dml="1111"></table>
			</schema>
		</privileges>		
		 -->
	</user>
	<user name="user">
		<property name="password">user</property>
		<property name="schemas">TESTDB</property>
		<property name="readOnly">true</property>
	</user>
</mycat:server>


 